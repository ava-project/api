// Code generated by protoc-gen-go.
// source: ava_api.proto
// DO NOT EDIT!

/*
Package test is a generated protocol buffer package.

It is generated from these files:
	ava_api.proto

It has these top-level messages:
	Request
	Reply
*/
package test

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Request struct {
	Name    string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Command string `protobuf:"bytes,2,opt,name=command" json:"command,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Reply struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *Reply) Reset()                    { *m = Reply{} }
func (m *Reply) String() string            { return proto.CompactTextString(m) }
func (*Reply) ProtoMessage()               {}
func (*Reply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*Request)(nil), "test.Request")
	proto.RegisterType((*Reply)(nil), "test.Reply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for SendToDaemon service

type SendToDaemonClient interface {
	Send(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Reply, error)
}

type sendToDaemonClient struct {
	cc *grpc.ClientConn
}

func NewSendToDaemonClient(cc *grpc.ClientConn) SendToDaemonClient {
	return &sendToDaemonClient{cc}
}

func (c *sendToDaemonClient) Send(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := grpc.Invoke(ctx, "/test.SendToDaemon/send", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for SendToDaemon service

type SendToDaemonServer interface {
	Send(context.Context, *Request) (*Reply, error)
}

func RegisterSendToDaemonServer(s *grpc.Server, srv SendToDaemonServer) {
	s.RegisterService(&_SendToDaemon_serviceDesc, srv)
}

func _SendToDaemon_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SendToDaemonServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/test.SendToDaemon/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SendToDaemonServer).Send(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _SendToDaemon_serviceDesc = grpc.ServiceDesc{
	ServiceName: "test.SendToDaemon",
	HandlerType: (*SendToDaemonServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "send",
			Handler:    _SendToDaemon_Send_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("ava_api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 156 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0x2c, 0x4b, 0x8c,
	0x4f, 0x2c, 0xc8, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x29, 0x49, 0x2d, 0x2e, 0x51,
	0x32, 0xe7, 0x62, 0x0f, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe2, 0x62, 0xc9, 0x4b,
	0xcc, 0x4d, 0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x85, 0x24, 0xb8, 0xd8, 0x93,
	0xf3, 0x73, 0x73, 0x13, 0xf3, 0x52, 0x24, 0x98, 0xc0, 0xc2, 0x30, 0xae, 0x92, 0x22, 0x17, 0x6b,
	0x50, 0x6a, 0x41, 0x4e, 0x25, 0x48, 0x49, 0x6e, 0x6a, 0x71, 0x71, 0x62, 0x3a, 0x4c, 0x27, 0x8c,
	0x6b, 0x64, 0xc2, 0xc5, 0x13, 0x9c, 0x9a, 0x97, 0x12, 0x92, 0xef, 0x92, 0x98, 0x9a, 0x9b, 0x9f,
	0x27, 0xa4, 0xc2, 0xc5, 0x52, 0x9c, 0x9a, 0x97, 0x22, 0xc4, 0xab, 0x07, 0xb2, 0x5a, 0x0f, 0x6a,
	0xaf, 0x14, 0x37, 0x8c, 0x5b, 0x90, 0x53, 0xa9, 0xc4, 0x90, 0xc4, 0x06, 0x76, 0x9e, 0x31, 0x20,
	0x00, 0x00, 0xff, 0xff, 0x94, 0x9b, 0x07, 0xe9, 0xaf, 0x00, 0x00, 0x00,
}
